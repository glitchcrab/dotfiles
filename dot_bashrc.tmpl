#!/bin/bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# cd into directories using just dir name without cd.
shopt -s autocd

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
   test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
   alias ls='ls --color=auto'
   alias grep='grep --color=auto'
   alias fgrep='fgrep --color=auto'
   alias egrep='egrep --color=auto'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# source generic env vars
if [ -f ~/.bash_env ]; then
    . ~/.bash_env
fi

# source generic functions
if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi

# source generic aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

{{- if or (eq .chezmoi.hostname "phoenix") (eq .chezmoi.hostname "cheyenne") }}
# source giantswarm env vars
if [ -f ~/.bash_env_giantswarm ]; then
    . ~/.bash_env_giantswarm
fi

# source giantswarm functions
if [ -f ~/.bash_functions_giantswarm ]; then
    . ~/.bash_functions_giantswarm
fi

# source giantswarm aliases
if [ -f ~/.bash_aliases_giantswarm ]; then
    . ~/.bash_aliases_giantswarm
fi
{{- end }}

# source giantswarm bash completion
#if [ -f ~/.bash_completion_giantswarm ]; then
#    . ~/.bash_completion_giantswarm
#fi

# source fzf bash config
if [ -f /usr/share/fzf/key-bindings.bash ]; then
    . /usr/share/fzf/key-bindings.bash
    . /usr/share/fzf/completion.bash
fi

# add krew bin dir to path
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

#PS1_BLUE='\[\033[38;5;39m\]'
#PS1_WHITE='\[\033[38;5;15m\]'
#PS1_GREEN='\[\033[38;5;43m\]'
#PS1_RESET='\[$(tput sgr0)\]'

#export PS1="${PS1_RESET}[${PS1_BLUE}\u${PS1_RESET} ${PS1_GREEN}\W${PS1_RESET}]\$(kube_ps1)\$(git_prompt)${PS1_RESET}\$ ${PS1_RESET}"

if [ -f /usr/bin/switch.sh ]; then
    source /usr/bin/switch.sh
    switch . > /dev/null 2>&1
fi

# init starship
eval "$(starship init bash)"

# make keychain work with ssh-agent
#eval `keychain --agents gpg,ssh --eval id_rsa 316053AB --nogui -Q`
{{- if or (eq .chezmoi.hostname "phoenix") (eq .chezmoi.hostname "cheyenne") }}
eval `keychain --eval id_ed25519 id_giantswarm --nogui --quiet`
{{- else if or (eq .chezmoi.hostname "raleigh") (eq .chezmoi.hostname "olympia") }}
eval `keychain --eval id_ed25519 --nogui --quiet`
{{- end }}
alias add-gpg='eval `keychain --eval E19A963B5501AB6565F691C2988E9858747ABE88 --nogui --quiet`'
